openapi: 3.0.1
info:
  title: Kryptutil API
  description: 'JWT, crypt, hash'
  license:
    name: Apache 2.0
    url: 'http://springdoc.org'
  version: v0.1.1
servers:
  - url: 'https://www.gdoeppert.de/kryptutil'
  - url: 'http://localhost:28080/kryptutil'
x-cors:
  locations:
  - http://localhost:4200
  - https://www.gdoeppert.de
  - https://cloud.gdoeppert.de
  methods: 
  - GET
  - OPTIONS
  - POST
  headers:
  - "Content-Type"
  
paths:
  /token/new:
    post:
      tags:
        - token
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TokenResponse'
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string
  '/pgp/encryptAsymFile/{key}':
    post:
      tags:
        - pgp
      operationId: encryptAsymFile
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  '/pgp/encryptAsym/{key}':
    post:
      tags:
        - pgp
      operationId: encryptAsym
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  /pgp/encode64:
    post:
      tags:
        - pgp
      operationId: encode64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string
              
  '/pgp/decryptAsymFile/{key}':
    post:
      tags:
        - pgp
      operationId: decryptAsymFile
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  '/pgp/decryptAsym/{key}':
    post:
      tags:
        - pgp
      operationId: decryptAsym
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  '/pgp/signAsymFile/{key}':
    post:
      tags:
        - pgp
      operationId: signAsymFile
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  '/pgp/signAsym/{key}':
    post:
      tags:
        - pgp
      operationId: signAsym
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      x-auth: CLIENT_CERT
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  '/pgp/verifyAsymFile/{key}/{signature}':
    post:
      tags:
        - pgp
      operationId: verifyAsymFile
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: signature
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ValidationResult'
        '400':
          description: NOK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ValidationResult'
  '/pgp/verifyAsym/{key}/{signature}':
    post:
      tags:
        - pgp
      operationId: verifyAsym
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: signature
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ValidationResult'
        '400':
          description: NOK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ValidationResult'
  /pgp/decode64:
    post:
      tags:
        - pgp
      operationId: decode64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  /token/listpubkeys:
    get:
      tags:
        - token
      operationId: listPubkeys
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  /token/listprivkeys:
    get:
      tags:
        - token
      operationId: listPrivkeys
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  /token/listalgs:
    get:
      tags:
        - token
      operationId: listAlgs
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SignAlg'
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  /token/check:
    get:
      tags:
        - token
      operationId: checkJwt
      parameters:
        - name: jwt
          in: query
          required: true
          schema:
            type: string
        - name: key
          in: query
          required: true
          schema:
            type: string
        - name: keysrc
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ValidationResult'
        '400':
          description: NOK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ValidationResult'
  /pgp/listpubkeys:
    get:
      tags:
        - pgp
      operationId: listPubKeys
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

  /pgp/listprivkeys:
    get:
      tags:
        - pgp
      operationId: listPrivKeys
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
        default:
          description: NOK
          content:
            'text/plain':
              schema:
                type: string

components:
  schemas:
    RequestedClaim:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    TokenRequest:
      type: object
      properties:
        subject:
          type: string
        tokenName:
          type: string
        audience:
          type: string
        notBefore:
          type: string
          format: date
        expiration:
          type: string
          format: date
        issuer:
          type: string
        key:
          type: string
        alg:
          type: string
        claims:
          type: array
          items:
            $ref: '#/components/schemas/RequestedClaim'
    SignAlg:
      type: object
      required:
        - name
        - minLen
        - description
        - usage
      properties:
        name:
          type: string
        minLen:
          type: integer
          format: int32
        description:
          type: string
        usage:
          type: string
    ValidationResult:
      type: object
      properties:
        result:
          type: string
        reason:
          type: string
    TokenResponse:
      type: object
      properties:
        token: 
          type: string
        pubkey: 
          type: string

