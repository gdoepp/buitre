import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('/index.html');
  await page.getByLabel('select key name', { exact: true }).locator('div').first().click();
  await page.getByText('default_rsa').click();
  await page.locator('input[name="cl1"]').click();
  await page.locator('input[name="cl1"]').fill('testuser');
  await page.locator('input[name="cl1"]').press('Tab');
  await page.locator('input[name="cl2"]').fill('testapp');
  await page.locator('input[name="cl2"]').press('Tab');
  await page.locator('input[name="cl3"]').fill('myca');
  await page.locator('input[name="cl3"]').press('Tab');
  const today = new Date();
  const nbf = new Date(today);
  nbf.setDate(today.getDate() - 5);
  const exp = new Date(today);
  exp.setDate(today.getDate() + 5);
  await page.locator('input[name="cl4"]').fill(nbf.toISOString().substring(0,10));
  await page.locator('input[name="cl5"]').fill(exp.toISOString().substring(0,10));
  await page.locator('input[name="cln"]').click();
  await page.locator('input[name="cln"]').fill('testclaim');
  await page.getByRole('button', { name: 'add claim' }).click();
  await page.getByRole('row', { name: 'testclaim' }).getByRole('textbox').click();
  await page.getByRole('row', { name: 'testclaim' }).getByRole('textbox').fill('testcontent');
  await page.getByRole('button', { name: 'create token with claims' }).click();
  await page.locator('textarea[name="tokenstring"]').click();
  await page.locator('textarea[name="tokenstring"]').press('ControlOrMeta+a');
  await page.locator('textarea[name="tokenstring"]').press('ControlOrMeta+c');
  await page.getByRole('tab', { name: 'Check Token' }).click();
  await page.locator('textarea[name="tokenstring"]').click();
  await page.locator('textarea[name="tokenstring"]').press('ControlOrMeta+v');
  await page.getByLabel('select key name', { exact: true }).locator('div').first().click();
  await page.getByText('default_rsa').click();
  await page.getByRole('button', { name: 'check token' }).click();
  await expect(page.locator('textarea[name="reason"]')).toHaveValue(/\{sub=testuser, aud=\[testapp\], exp=[0-9]+, iat=[0-9]+, iss=myca, nbf=[0-9]+, testclaim=testcontent, jti=[-0-9a-f]+\}/);
  await expect(page.getByText('valid')).toBeVisible();
  await expect(page.getByText('invalid')).not.toBeVisible();
});                                                                                                      